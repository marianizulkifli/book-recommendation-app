package com.example.recommendationapp;

import javafx.application.Application;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.layout.*;
import javafx.scene.paint.Color;
import javafx.scene.text.Font;
import javafx.scene.text.FontWeight;
import javafx.scene.text.Text;
import javafx.stage.Stage;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class RecommendationApp extends Application {

    private final Map<String, List<String>> booksByAuthor = new HashMap<>();
    private final Map<String, List<String>> booksByGenre = new HashMap<>();
    private final Map<String, String[]> bookDetails = new HashMap<>();
    private final Map<String, String> bookImages = new HashMap<>();
    private final List<String> favouriteBooks = new ArrayList<>();

    @Override
    public void start(Stage primaryStage) {
        // Populate data
        populateDummyData();

        // Create a VBox layout for the login page
        VBox loginLayout = new VBox(15);
        loginLayout.setAlignment(Pos.CENTER);
        loginLayout.setPadding(new Insets(20));
        loginLayout.setStyle("-fx-background-color: #9A7DFF;");

        // Add capybara image
        Image capybaraImage = new Image("file:C:\\\\Users\\\\hanisss\\\\eclipse-workspace\\\\Project\\\\src\\\\application\\\\capybara.png");
        ImageView imageView = new ImageView(capybaraImage);
        imageView.setFitWidth(150);
        imageView.setFitHeight(150);

        // Add welcome text
        Text welcomeText = new Text("WELCOME!");
        welcomeText.setFont(Font.font("Arial", FontWeight.BOLD, 24));
        welcomeText.setFill(Color.WHITE);

        // Create username field
        TextField usernameField = new TextField();
        usernameField.setPromptText("Username");
        usernameField.setMaxWidth(250);

        // Create password field
        PasswordField passwordField = new PasswordField();
        passwordField.setPromptText("Password");
        passwordField.setMaxWidth(250);

        // Add "Forgot password?" text
        Text forgotPasswordText = new Text("Forgot password?");
        forgotPasswordText.setFill(Color.WHITE);
        forgotPasswordText.setUnderline(true);
        forgotPasswordText.setOnMouseClicked(e -> {
            // Handle forgot password click
            System.out.println("Forgot password clicked!");
        });

        // Create login button
        Button loginButton = new Button("Login");
        loginButton.setStyle("-fx-background-color: #D3B8FF; -fx-text-fill: white; -fx-font-weight: bold;");
        loginButton.setOnAction(e -> {
            // Handle login button click
            String username = usernameField.getText();
            String password = passwordField.getText();
            System.out.println("Username: " + username + ", Password: " + password);
        });

        // Add all elements to the layout
        loginLayout.getChildren().addAll(imageView, welcomeText, usernameField, passwordField, forgotPasswordText, loginButton);

        // Set the scene and show the stage
        Scene loginScene = new Scene(loginLayout, 400, 500);
        primaryStage.setScene(loginScene);
        primaryStage.setTitle("Book Recommendation App");
        primaryStage.show();

        // Dashboard
        Label dashboardLabel = new Label("Welcome to Book Recommendation App!");
        dashboardLabel.setStyle("-fx-font-size: 18px; -fx-font-weight: bold;");
        Button searchByGenreButton = createButton("Genre", "file:C:\\genreicon.png");
         Button searchByAuthorButton = createButton("Author", "file:C:\\authoricon.png");
        Button addBookButton = createButton("Add Book", "file:C:\\bookicon.png");
        VBox dashboardLayout = new VBox(10, dashboardLabel, searchByGenreButton, searchByAuthorButton,  addBookButton);
        dashboardLayout.setPadding(new Insets(20));
        dashboardLayout.setStyle("-fx-background-color: #9A7DFF; -fx-alignment: center;");
        Scene dashboardScene = new Scene(dashboardLayout, 400, 500);

        // Search by Author Page
        Label authorLabel = new Label("Select Author:");
        ComboBox<String> authorComboBox = new ComboBox<>();
        authorComboBox.getItems().addAll(booksByAuthor.keySet());
        Button authorSearchButton = new Button("Search");
        ListView<HBox> authorBookListView = new ListView<>();
        Button authorBackButton = new Button("Back to Dashboard");
        VBox authorLayout = new VBox(10, authorLabel, authorComboBox, authorSearchButton, authorBookListView, authorBackButton);
        authorLayout.setPadding(new Insets(20));
        authorLayout.setStyle("-fx-background-color: #9A7DFF;");
        Scene authorScene = new Scene(authorLayout, 400, 500);

        // Search by Genre Page
        Label genreLabel = new Label("Select Genre:");
        ComboBox<String> genreComboBox = new ComboBox<>();
        genreComboBox.getItems().addAll(booksByGenre.keySet());
        Button genreSearchButton = new Button("Search");
        ListView<HBox> genreBookListView = new ListView<>();
        Button genreBackButton = new Button("Back to Dashboard");
        VBox genreLayout = new VBox(10, genreLabel, genreComboBox, genreSearchButton, genreBookListView, genreBackButton);
        genreLayout.setPadding(new Insets(20));
        genreLayout.setStyle("-fx-background-color: #9A7DFF;");
        Scene genreScene = new Scene(genreLayout, 400, 500);

        // Add Book Page
        Label titleLabel = new Label("Title:");
        TextField titleField = new TextField();
        Label genreInputLabel = new Label("Genre:");
        TextField genreInputField = new TextField();
        Label authorInputLabel = new Label("Author:");
        TextField authorInputField = new TextField();
        Label descriptionLabel = new Label("Description:");
        TextArea descriptionArea = new TextArea();
        Button saveBookButton = new Button("Save Book");
        Button addBookBackButton = new Button("Back to Dashboard");
        VBox addBookLayout = new VBox(10, titleLabel, titleField, genreInputLabel, genreInputField, authorInputLabel, authorInputField, descriptionLabel, descriptionArea, saveBookButton, addBookBackButton);
        addBookLayout.setPadding(new Insets(20));
        addBookLayout.setStyle("-fx-background-color: #9A7DFF;");
        Scene addBookScene = new Scene(addBookLayout, 400, 500);

        // Event Handlers
        loginButton.setOnAction(e -> {
            if (usernameField.getText().equals("admin") && passwordField.getText().equals("1234")) {
                primaryStage.setScene(dashboardScene);
            } else {
                Alert alert = new Alert(Alert.AlertType.ERROR);
                alert.setContentText("Please enter both username and password.");
                alert.show();
            }
        });

        searchByAuthorButton.setOnAction(e -> primaryStage.setScene(authorScene));
        searchByGenreButton.setOnAction(e -> primaryStage.setScene(genreScene));
        addBookButton.setOnAction(e -> primaryStage.setScene(addBookScene));

        authorSearchButton.setOnAction(e -> {
            String selectedAuthor = authorComboBox.getValue();
            if (selectedAuthor != null) {
                List<HBox> items = createBookItems(booksByAuthor.get(selectedAuthor));
                authorBookListView.getItems().setAll(items);
            }
        });
        authorBackButton.setOnAction(e -> primaryStage.setScene(dashboardScene));

        genreSearchButton.setOnAction(e -> {
            String selectedGenre = genreComboBox.getValue();
            if (selectedGenre != null) {
                List<HBox> items = createBookItems(booksByGenre.get(selectedGenre));
                genreBookListView.getItems().setAll(items);
            }
        });
        genreBackButton.setOnAction(e -> primaryStage.setScene(dashboardScene));

        saveBookButton.setOnAction(e -> {
            String newTitle = titleField.getText();
            String newGenre = genreInputField.getText();
            String newAuthor = authorInputField.getText();
            String newDescription = descriptionArea.getText();

            if (!newTitle.isEmpty() && !newGenre.isEmpty() && !newAuthor.isEmpty()) {
                booksByAuthor.computeIfAbsent(newAuthor, k -> new ArrayList<>()).add(newTitle);
                booksByGenre.computeIfAbsent(newGenre, k -> new ArrayList<>()).add(newTitle);
                bookDetails.put(newTitle, new String[]{newGenre, newAuthor, newDescription});
                titleField.clear();
                genreInputField.clear();
                authorInputField.clear();
                descriptionArea.clear();
                primaryStage.setScene(dashboardScene);
            }
        });

        addBookBackButton.setOnAction(e -> primaryStage.setScene(dashboardScene));

        // Setup Primary Stage
        primaryStage.setTitle("Book Recommendation App");
        primaryStage.setScene(loginScene);
        primaryStage.show();
    }
    private Button createButton(String text, String iconPath) {
        Button button = new Button(text);
        button.setStyle("-fx-background-color: #EFEFEF; -fx-text-fill: black;");
        button.setPrefSize(200, 60);

        // Add icon (replace with your actual file path)
        Image icon = new Image(iconPath);
        ImageView imageView = new ImageView(icon);
        imageView.setFitWidth(30);
        imageView.setFitHeight(30);

        button.setGraphic(imageView);
        return button;
    }

    private List<HBox> createBookItems(List<String> bookTitles) {
        List<HBox> items = new ArrayList<>();
        if (bookTitles != null) {
            for (String title : bookTitles) {
                String[] details = bookDetails.get(title);
                String imagePath = bookImages.getOrDefault(title, "file:src/blimages/default.jpg");

                ImageView imageView = new ImageView(new Image(imagePath));
                imageView.setFitWidth(80);
                imageView.setFitHeight(120);

                VBox textLayout = new VBox(5,
                        new Label("Title: " + title),
                        new Label("Genre: " + (details != null ? details[0] : "N/A")),
                        new Label("Author: " + (details != null ? details[1] : "N/A")),
                        new Label("Description: " + (details != null ? details[2] : "N/A")));

                Region spacer = new Region();
                HBox.setHgrow(spacer, Priority.ALWAYS);

                Button favButton = new Button("Add to Favourite");
                favButton.setOnAction(e -> {
                    favouriteBooks.add(title);
                    System.out.println("Added to Favourites: " + title);
                });

                HBox item = new HBox(10, imageView, textLayout, spacer, favButton);
                item.setPadding(new Insets(10));
                items.add(item);
            }
        }
        return items;
    }

    private void populateDummyData() {
        booksByAuthor.put("William Shakespeare", new ArrayList<>(List.of("Hamlet", "Macbeth", "Romeo and Juliet")));
        booksByAuthor.put("Stephen King", new ArrayList<>(List.of("The Shining", "It", "Carrie")));
        booksByAuthor.put("George Orwell", new ArrayList<>(List.of("1984", "Animal Farm", "Homage to Catalonia")));
        booksByAuthor.put("Lewis Carroll", new ArrayList<>(List.of("Alice's Adventures in Wonderland", "Through the Looking-Glass", "The Hunting of the Snark")));
        booksByAuthor.put("James Joyce", new ArrayList<>(List.of("Ulysses", "A Portrait of the Artist as a Young Man", "Dubliners")));
        booksByAuthor.put("Dr. Seuss", new ArrayList<>(List.of("The Cat in the Hat", "Green Eggs and Ham", "How the Grinch Stole Christmas")));
        booksByAuthor.put("Albert Camus", new ArrayList<>(List.of("The Stranger", "The Plague", "The Fall")));
        booksByGenre.put("Historical Fiction", new ArrayList<>(List.of("Hamlet", "Macbeth", "Homage to Catalonia", "Ulysses")));
        booksByGenre.put("Romance", new ArrayList<>(List.of("Romeo and Juliet")));
        booksByGenre.put("Horror", new ArrayList<>(List.of("The Shining", "It", "Carrie")));
        booksByGenre.put("Science Fiction", new ArrayList<>(List.of("1984")));
        booksByGenre.put("Fantasy", new ArrayList<>(List.of("Animal Farm", "Alice's Adventures in Wonderland", "Through the Looking-Glass", "The Hunting of the Snark")));
        bookDetails.put("Hamlet", new String[]{"Historical Fiction", "William Shakespeare", "A tragedy about Prince Hamlet of Denmark."});
        bookDetails.put("Macbeth", new String[]{"Historical Fiction", "William Shakespeare", "A story of ambition and its consequences."});
        bookDetails.put("Romeo and Juliet", new String[]{"Romance", "William Shakespeare", "A tale of star-crossed lovers."});
        bookDetails.put("The Shining", new String[]{"Horror", "Stephen King", "A family in an isolated hotel faces supernatural forces."});
        bookDetails.put("It", new String[]{"Horror", "Stephen King", "A group of friends confront an evil entity."});
        bookDetails.put("Carrie", new String[]{"Horror", "Stephen King", "A teenage girl unleashes telekinetic powers."});
        bookDetails.put("1984", new String[]{"Science Fiction", "George Orwell", "A dystopian novel about totalitarianism."});
        bookDetails.put("Animal Farm", new String[]{"Fantasy", "George Orwell", "A satirical allegory of communism."});
        bookDetails.put("Homage to Catalonia", new String[]{"Historical Fiction", "George Orwell", "An account of Orwell's experiences in the Spanish Civil War."});
        bookDetails.put("Alice's Adventures in Wonderland", new String[]{"Fantasy", "Lewis Carroll", "A young girl explores a magical world."});
        bookDetails.put("Through the Looking-Glass", new String[]{"Fantasy", "Lewis Carroll", "A sequel to Alice's adventures in Wonderland."});
        bookDetails.put("The Hunting of the Snark", new String[]{"Fantasy", "Lewis Carroll", "A nonsense poem about an impossible voyage."});
        bookDetails.put("Ulysses", new String[]{"Historical Fiction", "James Joyce", "A modernist novel about a day in Dublin."});
        bookDetails.put("A Portrait of the Artist as a Young Man", new String[]{"Historical Fiction", "James Joyce", "A semi-autobiographical novel of Joyce's early years."});
        bookDetails.put("Dubliners", new String[]{"Historical Fiction", "James Joyce", "A collection of short stories set in Dublin."});
        bookDetails.put("The Cat in the Hat", new String[]{"Fantasy", "Dr. Seuss", "A mischievous cat visits two children."});
        bookDetails.put("Green Eggs and Ham", new String[]{"Fantasy", "Dr. Seuss", "A whimsical story about trying new things."});
        bookDetails.put("How the Grinch Stole Christmas", new String[]{"Fantasy", "Dr. Seuss", "A tale of redemption during Christmas."});
        bookDetails.put("The Stranger", new String[]{"Mystery", "Albert Camus", "A novel about existentialism and absurdity."});
        bookDetails.put("The Plague", new String[]{"Historical Fiction", "Albert Camus", "A story about a town facing an epidemic."});
        bookDetails.put("The Fall", new String[]{"Mystery", "Albert Camus", "A philosophical novel about guilt and judgment."});
        bookImages.put("Hamlet", "file:src/blimages/hamlet.jpg");
        bookImages.put("Macbeth", "file:src/blimages/macbeth.jpg");
        bookImages.put("Romeo and Juliet", "file:src/blimages/romeo.jpg");
        bookImages.put("The Shining", "file:src/blimages/shining.jpg");
        bookImages.put("It", "file:src/blimages/it.jpg");
        bookImages.put("Carrie", "file:src/blimages/carrie.jpg");
        bookImages.put("1984", "file:src/blimages/1984.jpg");
        bookImages.put("Animal Farm", "file:src/blimages/animalfarm.jpg");
        bookImages.put("Homage to Catalonia", "file:src/blimages/homage.jpg");
        bookImages.put("Alice's Adventures in Wonderland", "file:src/blimages/alice.jpg");
        bookImages.put("Through the Looking-Glass", "file:src/blimages/through.jpg");
        bookImages.put("The Hunting of the Snark", "file:src/blimages/hunting.jpg");
        bookImages.put("Ulysses", "file:src/blimages/ulysses.jpg");
        bookImages.put("A Portrait of the Artist as a Young Man", "file:src/blimages/portrait.jpg");
        bookImages.put("Dubliners", "file:src/blimages/dubliners.jpg");
        bookImages.put("The Cat in the Hat", "file:src/blimages/thecat.jpg");
        bookImages.put("Green Eggs and Ham", "file:src/blimages/greeneggs.jpg");
        bookImages.put("How the Grinch Stole Christmas", "file:src/blimages/howthe.jpg");
        bookImages.put("The Stranger", "file:src/blimages/thestranger.jpg");
        bookImages.put("The Plague", "file:src/blimages/theplague.jpg");
        bookImages.put("The Fall", "file:src/blimages/thefall.jpg");
    }

    public static void main(String[] args) {
        launch(args);
    }
}
